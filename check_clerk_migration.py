#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ –∫–æ–ª–æ–Ω–∫–∞ clerk_id –≤ —Ç–∞–±–ª–∏—Ü–µ users
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

try:
    from sqlalchemy import create_engine, text, inspect
    from dotenv import load_dotenv
    
    load_dotenv()
    
    DATABASE_URL = os.getenv("DATABASE_URL", "sqlite:///./data/vibematch.db")
    
    # –ó–∞–º–µ–Ω—è–µ–º asyncpg –Ω–∞ psycopg2 –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if "asyncpg" in DATABASE_URL:
        DATABASE_URL = DATABASE_URL.replace("postgresql+asyncpg://", "postgresql://")
    
    print(f"üîç –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    print(f"üìä DATABASE_URL: {DATABASE_URL[:50]}...")
    
    engine = create_engine(DATABASE_URL)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    with engine.connect() as conn:
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞ users
        inspector = inspect(engine)
        tables = inspector.get_table_names()
        
        if 'users' in tables:
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ 'users' –Ω–∞–π–¥–µ–Ω–∞")
            
            # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–æ–Ω–∫–∏ —Ç–∞–±–ª–∏—Ü—ã users
            columns = inspector.get_columns('users')
            column_names = [col['name'] for col in columns]
            
            print(f"üìã –ö–æ–ª–æ–Ω–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ users:")
            for col in columns:
                print(f"  - {col['name']}: {col['type']}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ clerk_id
            if 'clerk_id' in column_names:
                print("\n‚úÖ –ö–æ–ª–æ–Ω–∫–∞ 'clerk_id' –ï–°–¢–¨ –≤ —Ç–∞–±–ª–∏—Ü–µ!")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–¥–µ–∫—Å
                indexes = inspector.get_indexes('users')
                clerk_index_exists = any('clerk_id' in idx.get('column_names', []) for idx in indexes)
                
                if clerk_index_exists:
                    print("‚úÖ –ò–Ω–¥–µ–∫—Å –¥–ª—è clerk_id –Ω–∞–π–¥–µ–Ω")
                else:
                    print("‚ö†Ô∏è  –ò–Ω–¥–µ–∫—Å –¥–ª—è clerk_id –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
                    
            else:
                print("\n‚ùå –ö–æ–ª–æ–Ω–∫–∞ 'clerk_id' –û–¢–°–£–¢–°–¢–í–£–ï–¢ –≤ —Ç–∞–±–ª–∏—Ü–µ!")
                print("üîß –ù—É–∂–Ω–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é:")
                print("   ./apply_migration.sh")
                
        else:
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ 'users' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            print("üîß –ù—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—ã")

except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
    print("\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
    print("1. –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
    print("2. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π DATABASE_URL")
    print("3. –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞")
    print("4. PostgreSQL –Ω–µ –∑–∞–ø—É—â–µ–Ω")

print("\nüéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
print("1. –ï—Å–ª–∏ clerk_id –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç - –ø—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é")
print("2. –ï—Å–ª–∏ –ë–î –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ")
print("3. –ï—Å–ª–∏ –≤—Å–µ OK - –ø—Ä–æ–±–ª–µ–º–∞ –≤ –¥—Ä—É–≥–æ–º –º–µ—Å—Ç–µ") 