#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π Aivi:
1. –°–∏—Å—Ç–µ–º–∞ –ª–∏–º–∏—Ç–æ–≤ (3 –∞–Ω–∞–ª–∏–∑–∞ –≤ –¥–µ–Ω—å)
2. –ò–∑–±—Ä–∞–Ω–Ω–æ–µ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
3. –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –º—É–∑—ã–∫–∏
"""

import requests
import json
import os
from datetime import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
API_BASE_URL = "http://localhost:8001"
FRONTEND_URL = "http://localhost:3000"

def test_daily_limits():
    """–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –¥–Ω–µ–≤–Ω—ã—Ö –ª–∏–º–∏—Ç–æ–≤"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –¥–Ω–µ–≤–Ω—ã—Ö –ª–∏–º–∏—Ç–æ–≤...")
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    headers = {
        "Authorization": "Bearer test_token",  # –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω
        "Content-Type": "application/json"
    }
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –ª–∏–º–∏—Ç—ã
        response = requests.get(f"{API_BASE_URL}/users/me", headers=headers)
        if response.status_code == 200:
            user_data = response.json()
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_data.get('username')}")
            print(f"üìä –¢–∏–ø –∞–∫–∫–∞—É–Ω—Ç–∞: {user_data.get('account_type', 'basic')}")
            print(f"üî¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —Å–µ–≥–æ–¥–Ω—è: {user_data.get('daily_usage', 0)}/3")
            
            if user_data.get('account_type') == 'pro':
                print("üéâ PRO –∞–∫–∫–∞—É–Ω—Ç - –±–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø!")
            else:
                remaining = 3 - user_data.get('daily_usage', 0)
                print(f"‚è≥ –û—Å—Ç–∞–ª–æ—Å—å –∞–Ω–∞–ª–∏–∑–æ–≤: {remaining}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {response.status_code}")
    
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

def test_user_favorites():
    """–¢–µ—Å—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö"""
    print("\nüíñ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ...")
    
    headers = {
        "Authorization": "Bearer test_token",  # –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω
        "Content-Type": "application/json"
    }
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –ø–µ—Å–Ω–∏
        response = requests.get(f"{API_BASE_URL}/media/saved-songs", headers=headers)
        if response.status_code == 200:
            saved_songs = response.json()
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –ø–µ—Å–µ–Ω: {len(saved_songs)}")
            
            for song in saved_songs[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                print(f"üéµ {song.get('title')} - {song.get('artist')}")
                print(f"   YouTube ID: {song.get('youtube_video_id')}")
                print(f"   –î–∞—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {song.get('date_saved')}")
                print()
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ: {response.status_code}")
    
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

def test_download_functionality():
    """–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è"""
    print("\nüì• –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–∫–∞—á–∏–≤–∞–Ω–∏—è...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ –≤ audio_cache
    audio_cache_dir = "audio_cache"
    if os.path.exists(audio_cache_dir):
        files = [f for f in os.listdir(audio_cache_dir) if f.endswith(('.mp3', '.m4a', '.wav'))]
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤: {len(files)}")
        
        if files:
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ —Ñ–∞–π–ª–∞
            test_file = files[0]
            print(f"üéµ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ: {test_file}")
            
            try:
                download_url = f"{API_BASE_URL}/chat/download-beat/{test_file}"
                response = requests.get(download_url)
                
                if response.status_code == 200:
                    print(f"‚úÖ –§–∞–π–ª –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è")
                    print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {len(response.content)} bytes")
                    print(f"üîó URL: {download_url}")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {response.status_code}")
            
            except requests.exceptions.RequestException as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        else:
            print("‚ÑπÔ∏è  –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è")
    else:
        print("‚ÑπÔ∏è  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è audio_cache –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

def test_music_generation():
    """–¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º—É–∑—ã–∫–∏"""
    print("\nüéπ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –º—É–∑—ã–∫–∏...")
    
    headers = {
        "Authorization": "Bearer test_token",  # –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω
        "Content-Type": "application/json"
    }
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –º—É–∑—ã–∫–∏
        data = {
            "prompt": "upbeat electronic music for testing"
        }
        
        response = requests.post(
            f"{API_BASE_URL}/chat/generate-beat",
            headers=headers,
            json=data
        )
        
        if response.status_code == 200:
            result = response.json()
            if result.get('success'):
                print("‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
                if result.get('audio_url'):
                    print(f"üéµ –ú—É–∑—ã–∫–∞ –≥–æ—Ç–æ–≤–∞: {result['audio_url']}")
                elif result.get('request_id'):
                    print(f"‚è≥ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ, ID: {result['request_id']}")
                else:
                    print(f"üìù –°—Ç–∞—Ç—É—Å: {result.get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {result.get('error')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {response.status_code}")
    
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π Aivi")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
    try:
        response = requests.get(f"{API_BASE_URL}/auth/ngrok-url")
        if response.status_code == 200:
            print("‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print("‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            return
    except requests.exceptions.RequestException:
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API")
        return
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    test_daily_limits()
    test_user_favorites()
    test_download_functionality()
    test_music_generation()
    
    print("\n" + "=" * 50)
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\n‚ÑπÔ∏è  –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("1. –ó–∞–º–µ–Ω–∏—Ç–µ 'test_token' –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π Clerk —Ç–æ–∫–µ–Ω")
    print("2. –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏")
    print("3. –°–¥–µ–ª–∞–π—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∞–Ω–∞–ª–∏–∑–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏–º–∏—Ç–æ–≤")
    print("4. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Å–Ω–∏ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ")
    print("5. –°–≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ –º—É–∑—ã–∫—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–∫–∞—á–∞—Ç—å")

if __name__ == "__main__":
    main() 