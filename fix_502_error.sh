#!/bin/bash

echo "üîß –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 502 Bad Gateway –æ—à–∏–±–∫–∏"
echo "=" √ó 60

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
if [ ! -f "docker-compose.yml" ]; then
    echo "‚ùå –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞ (–Ω—É–∂–µ–Ω docker-compose.yml)"
    exit 1
fi

echo "‚úÖ –ù–∞–π–¥–µ–Ω docker-compose.yml"

# –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo ""
echo "1Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
if [ -f "check_clerk_migration.py" ]; then
    python3 check_clerk_migration.py
else
    echo "‚ùå –°–∫—Ä–∏–ø—Ç check_clerk_migration.py –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
echo ""
echo "2Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
if docker ps | grep -q backend; then
    echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ backend:"
    docker-compose logs --tail=20 backend | grep -E "(ERROR|Exception|Traceback|‚ùå|502)" || echo "–ù–µ—Ç —è–≤–Ω—ã—Ö –æ—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö"
else
    echo "‚ùå Backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω"
fi

# –®–∞–≥ 3: –¢–µ—Å—Ç–∏—Ä—É–µ–º API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
echo ""
echo "3Ô∏è‚É£  –¢–µ—Å—Ç–∏—Ä—É–µ–º API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º health check
echo "üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º /health..."
HEALTH_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8001/health)
if [ "$HEALTH_STATUS" = "200" ]; then
    echo "‚úÖ /health —Ä–∞–±–æ—Ç–∞–µ—Ç ($HEALTH_STATUS)"
else
    echo "‚ùå /health –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç ($HEALTH_STATUS)"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º protected endpoint –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
echo "üîí –ü—Ä–æ–≤–µ—Ä—è–µ–º /api/users/me –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏..."
USERS_ME_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8001/api/users/me)
echo "üìä /api/users/me —Å—Ç–∞—Ç—É—Å: $USERS_ME_STATUS"

if [ "$USERS_ME_STATUS" = "401" ] || [ "$USERS_ME_STATUS" = "403" ] || [ "$USERS_ME_STATUS" = "422" ]; then
    echo "‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ (–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç $USERS_ME_STATUS –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞)"
elif [ "$USERS_ME_STATUS" = "404" ]; then
    echo "‚ùå API —Ä–æ—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω (404) - –ø—Ä–æ–±–ª–µ–º–∞ —Å —Ä–æ—É—Ç–∏–Ω–≥–æ–º –≤ main.py"
elif [ "$USERS_ME_STATUS" = "502" ]; then
    echo "‚ùå Bad Gateway (502) - –ø—Ä–æ–±–ª–µ–º–∞ –≤ backend –∫–æ–¥–µ –∏–ª–∏ –ë–î"
elif [ "$USERS_ME_STATUS" = "500" ]; then
    echo "‚ùå Internal Server Error (500) - –ø—Ä–æ–±–ª–µ–º–∞ –≤ backend –∫–æ–¥–µ"
else
    echo "‚ö†Ô∏è  –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: $USERS_ME_STATUS"
fi

# –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo ""
echo "4Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
if [ -f ".env" ]; then
    if grep -q "CLERK_PUBLIC_KEY=" .env; then
        CLERK_KEY=$(grep "CLERK_PUBLIC_KEY=" .env | cut -d'=' -f2)
        if [ -n "$CLERK_KEY" ]; then
            echo "‚úÖ CLERK_PUBLIC_KEY —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${CLERK_KEY:0:15}..."
        else
            echo "‚ùå CLERK_PUBLIC_KEY –ø—É—Å—Ç–æ–π"
        fi
    else
        echo "‚ùå CLERK_PUBLIC_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env"
    fi
else
    echo "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –®–∞–≥ 5: –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ä–µ—à–µ–Ω–∏—è
echo ""
echo "üéØ –î–ò–ê–ì–ù–û–ó –ò –†–ï–®–ï–ù–ò–Ø:"
echo "=" √ó 60

if [ "$USERS_ME_STATUS" = "502" ]; then
    echo "‚ùå –ü–†–û–ë–õ–ï–ú–ê: 502 Bad Gateway"
    echo ""
    echo "üí° –ù–ê–ò–ë–û–õ–ï–ï –í–ï–†–û–Ø–¢–ù–ê–Ø –ü–†–ò–ß–ò–ù–ê:"
    echo "   –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–ª–æ–Ω–∫–∞ clerk_id –≤ —Ç–∞–±–ª–∏—Ü–µ users"
    echo ""
    echo "üîß –†–ï–®–ï–ù–ò–ï:"
    echo "   1. –ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:"
    echo "      chmod +x apply_migration.sh"
    echo "      ./apply_migration.sh"
    echo ""
    echo "   2. –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º –∫–æ–¥–æ–º:"
    echo "      git pull origin main"
    echo "      docker-compose down"
    echo "      docker-compose build --no-cache"
    echo "      docker-compose up -d"
    
elif [ "$USERS_ME_STATUS" = "404" ]; then
    echo "‚ùå –ü–†–û–ë–õ–ï–ú–ê: 404 Not Found"
    echo ""
    echo "üí° –ü–†–ò–ß–ò–ù–ê:"
    echo "   –†–æ—É—Ç—ã –Ω–µ –∏–º–µ—é—Ç –ø—Ä–µ—Ñ–∏–∫—Å–∞ /api –≤ main.py"
    echo ""
    echo "üîß –†–ï–®–ï–ù–ò–ï:"
    echo "   git pull origin main  # (—É–∂–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ)"
    echo "   docker-compose build --no-cache"
    echo "   docker-compose up -d"
    
elif [ "$USERS_ME_STATUS" = "401" ] || [ "$USERS_ME_STATUS" = "403" ] || [ "$USERS_ME_STATUS" = "422" ]; then
    echo "‚úÖ –•–û–†–û–®–ò–ï –ù–û–í–û–°–¢–ò: API —Ä–∞–±–æ—Ç–∞–µ—Ç!"
    echo ""
    echo "üí° –ü–†–û–ë–õ–ï–ú–ê –º–æ–∂–µ—Ç –±—ã—Ç—å –≤:"
    echo "   1. –ü–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è frontend (VITE_CLERK_PUBLIC_KEY)"
    echo "   2. –ö—ç—à–µ –±—Ä–∞—É–∑–µ—Ä–∞"
    echo ""
    echo "üîß –†–ï–®–ï–ù–ò–ï:"
    echo "   ./fix_clerk_env.sh"
else
    echo "‚ö†Ô∏è  –ù–ï–û–ü–†–ï–î–ï–õ–ï–ù–ù–ê–Ø –ü–†–û–ë–õ–ï–ú–ê"
    echo ""
    echo "üîß –ü–û–ü–†–û–ë–£–ô–¢–ï:"
    echo "   1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏: docker-compose logs backend"
    echo "   2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å: docker-compose restart"
    echo "   3. –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞: docker-compose down && docker-compose build --no-cache && docker-compose up -d"
fi

echo ""
echo "üìû –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –Ω–µ —Ä–µ—à–∞–µ—Ç—Å—è:"
echo "   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose logs backend | tail -50"
echo "   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ë–î: python3 check_clerk_migration.py"
echo "   - –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É —Å –ª–æ–≥–∞–º–∏" 